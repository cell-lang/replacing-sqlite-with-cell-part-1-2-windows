This directory contains a few example Cell projects to get you started. You'll
need the Microsoft C# compiler (csc.exe) that comes with any version of Visual
Studio. To build any of the examples, just cd into the corresponding directory
and type 'build', but make sure csc.exe in on your PATH first.

The project.txt file in each directory contains the list of Cell source code
files that are included in the project. Here's a description of the available
examples:


send-msgs:
  This example project is described in the "Using relational automata" section of
  the Cell website. It creates an instance of a relational automaton, loads its
  initial state from a file, reads a list of messages from another, sends all the
  messages to the automaton instance and writes the final state to a third file.
  It uses the Counter automaton described in the online documentation, but you
  can easily replace it with your own relational automaton.

water-sensor:
  Another example project taken from the "Using reactive automata" section of the
  online documentation. It shows how to define, create and control a reactive
  automaton.

send-msgs-mixed:
  This example does the same thing as send-msgs, but it's a mixed language
  application. It shows how to use the facade classes generated by the Cell
  compiler for a relational automata. The file logins.cell contains the
  definition of the Logins automaton described in the online documentation,
  and main.cs contains the C# code that creates and controls it. The command
  line syntax is the same as for send-msg.

water-sensor-mixed:
  This example does the same thing as water-sensor, but it's a mixed language
  application. It demonstrates how to use the class generated by the compiler
  for a reactive automaton, and how to create a wrapper class for it.
